<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liu.mbg.mapper.VideoCommentMapper">
  <resultMap id="BaseResultMap" type="com.liu.mbg.model.VideoComment">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="video_id" jdbcType="BIGINT" property="videoId" />
    <result column="video_name" jdbcType="VARCHAR" property="videoName" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_icon" jdbcType="VARCHAR" property="userIcon" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modified_time" jdbcType="TIMESTAMP" property="modifiedTime" />
    <result column="pics" jdbcType="VARCHAR" property="pics" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.liu.mbg.model.VideoComment">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, video_id, video_name, user_name, user_icon, create_time, modified_time, pics
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.liu.mbg.model.VideoCommentExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from video_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.liu.mbg.model.VideoCommentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from video_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from video_comment
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from video_comment
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.liu.mbg.model.VideoCommentExample">
    delete from video_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.liu.mbg.model.VideoComment">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into video_comment (video_id, video_name, user_name, 
      user_icon, create_time, modified_time, 
      pics, content)
    values (#{videoId,jdbcType=BIGINT}, #{videoName,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, 
      #{userIcon,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{modifiedTime,jdbcType=TIMESTAMP}, 
      #{pics,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.liu.mbg.model.VideoComment">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into video_comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="videoId != null">
        video_id,
      </if>
      <if test="videoName != null">
        video_name,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="userIcon != null">
        user_icon,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifiedTime != null">
        modified_time,
      </if>
      <if test="pics != null">
        pics,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="videoId != null">
        #{videoId,jdbcType=BIGINT},
      </if>
      <if test="videoName != null">
        #{videoName,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userIcon != null">
        #{userIcon,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedTime != null">
        #{modifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pics != null">
        #{pics,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.liu.mbg.model.VideoCommentExample" resultType="java.lang.Integer">
    select count(*) from video_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update video_comment
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.videoId != null">
        video_id = #{record.videoId,jdbcType=BIGINT},
      </if>
      <if test="record.videoName != null">
        video_name = #{record.videoName,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.userIcon != null">
        user_icon = #{record.userIcon,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifiedTime != null">
        modified_time = #{record.modifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.pics != null">
        pics = #{record.pics,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update video_comment
    set id = #{record.id,jdbcType=BIGINT},
      video_id = #{record.videoId,jdbcType=BIGINT},
      video_name = #{record.videoName,jdbcType=VARCHAR},
      user_name = #{record.userName,jdbcType=VARCHAR},
      user_icon = #{record.userIcon,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modified_time = #{record.modifiedTime,jdbcType=TIMESTAMP},
      pics = #{record.pics,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update video_comment
    set id = #{record.id,jdbcType=BIGINT},
      video_id = #{record.videoId,jdbcType=BIGINT},
      video_name = #{record.videoName,jdbcType=VARCHAR},
      user_name = #{record.userName,jdbcType=VARCHAR},
      user_icon = #{record.userIcon,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modified_time = #{record.modifiedTime,jdbcType=TIMESTAMP},
      pics = #{record.pics,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.liu.mbg.model.VideoComment">
    update video_comment
    <set>
      <if test="videoId != null">
        video_id = #{videoId,jdbcType=BIGINT},
      </if>
      <if test="videoName != null">
        video_name = #{videoName,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userIcon != null">
        user_icon = #{userIcon,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedTime != null">
        modified_time = #{modifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pics != null">
        pics = #{pics,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.liu.mbg.model.VideoComment">
    update video_comment
    set video_id = #{videoId,jdbcType=BIGINT},
      video_name = #{videoName,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      user_icon = #{userIcon,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modified_time = #{modifiedTime,jdbcType=TIMESTAMP},
      pics = #{pics,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.liu.mbg.model.VideoComment">
    update video_comment
    set video_id = #{videoId,jdbcType=BIGINT},
      video_name = #{videoName,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      user_icon = #{userIcon,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modified_time = #{modifiedTime,jdbcType=TIMESTAMP},
      pics = #{pics,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>